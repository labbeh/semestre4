	public void collision(Meteorite b2) 	{ 			// Dans cette méthode (de la classe meteorite) : 		// This est une meteorite courante, et b2 une autre meteorite		// les angles sont en radians		// le parametre vitesse est la norme (grandeur) du vecteur vitesse		// Quantité de mouvement et énergie cinétique avant la collision 		// double qmx1 = b1.m * b1.vx + b2.m * b2.vx; 		// double qmy1 = b1.m * b1.vy + b2.m * b2.vy; 		// double ec1 = b1.m * (b1.vx*b1.vx + b1.vy*b1.vy) + b2.m * (b2.vx*b2.vx + b2.vy*b2.vy); 		// Calcul de la base orthonormée (n,g) 		double dx = this.posX - b2.posX; 		double dy = this.posY - b2.posY; 				double r = Math.sqrt(dx*dx + dy*dy); 		// n est perpendiculaire au plan de collision 		double nx = (b2.posX - this.posX) / r; 		double ny = (b2.posY - this.posY) / r; 		// g est tangent au plan de collision 		double gx = -ny; 		double gy = nx; 		// Transition des vitesses de la base (x,y) vers (n,g) 		double b1vx=this.vitesse*Math.cos(this.theta);		double b1vy=this.vitesse*Math.sin(this.theta);		double b2vx=b2.vitesse*Math.cos(b2.theta);		double b2vy=b2.vitesse*Math.sin(b2.theta);				double v1n = nx*b1vx + ny*b1vy; 		double v1g = gx*b1vx + gy*b1vy; 		double v2n = nx*b2vx + ny*b2vy; 		double v2g = gx*b2vx + gy*b2vy; 		// Détermination des nouvelles vitesses dans (n,g) 		double b1m = this.diam*this.diam;		double b2m = b2.diam*b2.diam;				double m = b1m + b2m; 		double m12 = (b1m - b2m)/m; 		double m22 = (b2m + b2m)/m; 		double m11 = (b1m + b1m)/m; 		double m21 = (b2m - b1m)/m; 		double v1n2 = m12*v1n + m22*v2n; 		double v1g2 = m12*v1g + m22*v2g; 		double v2n2 = m11*v1n + m21*v2n; 		double v2g2 = m11*v1g + m21*v2g; 				// Modification des vitesses dans la base (x,y) 		b1vx = nx*v1n2 + gx*v1g2; 		b1vy = ny*v1n2 + gy*v1g2; 		b2vx = nx*v2n2 + gx*v2g2; 		b2vy = ny*v2n2 + gy*v2g2; 				this.vitesse = Math.sqrt(b1vx*b1vx+b1vy*b1vy);		b2.vitesse   = Math.sqrt(b2vx*b2vx+b2vy*b2vy);				this.theta = Math.atan(b1vy/b1vx);		if (b1vx<0)			if (b1vy>0)				this.theta+=Math.PI;			else				this.theta-=Math.PI;		b2.theta = Math.atan(b2vy/b2vx);		if (b2vx<0)			if (b2vy>0)				b2.theta+=Math.PI;			else				b2.theta-=Math.PI;	} 